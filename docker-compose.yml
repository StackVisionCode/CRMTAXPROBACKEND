services:
  # --- SQL Server 2022 -------------------------------------------------------
  # 10.128.3.20:
  #   image: mcr.microsoft.com/mssql/server:2022-latest
  #   container_name: 10.128.3.20
  #   ports:
  #     - "1433:1433"
  #   environment:
  #     ACCEPT_EULA: "Y"
  #     SA_PASSWORD: "Brittany040238."
  #     MSSQL_PID: "Developer"
  #     MSSQL_MEMORY_LIMIT_MB: "2048"
  #     MSSQL_TCP_PORT: "1433"
  #   networks: [backend]
  #   volumes:
  #     - 10.128.3.20_data:/var/opt/mssql
  #   healthcheck:
  #     test: ["CMD-SHELL", "/opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P 'Brittany040238.' -C -Q 'SELECT 1' || exit 1"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 10
  #     start_period: 60s
  #   restart: unless-stopped
  #   deploy:
  #     resources:
  #       limits:
  #         memory: 2G
  #       reservations:
  #         memory: 1G




nginx:
  image: nginx:alpine
  volumes:
    - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    - ./certs:/etc/nginx/certs:ro   # Certificado SSL
  ports:
    - "80:80"
    - "443:443"
  depends_on:
    - rabbitmq
  networks: [backend]
  
  # --- RabbitMQ --------------------------------------------------------------
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks: [backend]
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 30s
      timeout: 30s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  # --- Reddis --------------------------------------------------------------
  redis:
    image: redis:7-alpine
    container_name: redis
    command: [
      "redis-server",
      "--appendonly", "yes",
      "--appendfsync", "everysec",
      "--maxmemory", "2048mb",
      "--maxmemory-policy", "allkeys-lru",
      "--tcp-keepalive", "60",
      "--timeout", "300",
      "--save", "900", "1",
      "--save", "300", "10", 
      "--save", "60", "10000",
      "--rdbcompression", "yes",
      "--rdbchecksum", "yes"
    ]
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data 
    networks: [backend]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # --- RedisInsight (Oficial) ------------------------------------------
  redisinsight:
    image: redislabs/redisinsight:1.14.0
    container_name: redisinsight
    ports:
      - "8081:8001"
    volumes:
      - redisinsight_data:/db
    depends_on:
      redis:
        condition: service_healthy
    networks: [backend]
    restart: unless-stopped

  # --- API Gateway -----------------------------------------------------------
  apigateway:
    image: ${REGISTRY_PREFIX}-apigateway:${TAG}
    environment:
      RUNNING_IN_DOCKER: "true"
      ASPNETCORE_ENVIRONMENT: Production
      ASPNETCORE_URLS: http://0.0.0.0:80
      HybridCache__Redis__ConnectionString: "redis:6379"
      HybridCache__Redis__KeyPrefix: "gateway"
      HybridCache__Redis__Database: "0"
    ports:
      - "5000:80"
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks: [backend]
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # --- Auth Service ----------------------------------------------------------
  auth-service:
    image: ${REGISTRY_PREFIX}-auth-service:${TAG}
    environment:
      RUNNING_IN_DOCKER: "true"
      ASPNETCORE_URLS: http://0.0.0.0:8080
      DB_SERVER: 10.128.3.20
      DB_USER: sa
      DB_PASSWORD: "Brittany040238."
      RabbitMQ__HostName: rabbitmq
      RabbitMQ__UserName: guest
      RabbitMQ__Password: guest
      HybridCache__Redis__ConnectionString: "redis:6379"
      HybridCache__Redis__KeyPrefix: "auth"
      HybridCache__Redis__Database: "1"
    depends_on:
      rabbitmq:
        condition: service_healthy     
      redis:
        condition: service_healthy
    networks: [backend]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 768M
        reservations:
          memory: 512M


# ---SMS Service ---------------------------------------------------------

  sms-service:
    image: ${REGISTRY_PREFIX}-sms-service:${TAG}
    environment:
      RUNNING_IN_DOCKER: "true"
      ASPNETCORE_URLS: http://0.0.0.0:8080
      DB_SERVER: 10.128.3.20
      DB_USER: sa
      DB_PASSWORD: "Brittany040238."  
    networks: [backend]
  

  # --- Calendar Service ------------------------------------------------------
  calendar-service:
    image: ${REGISTRY_PREFIX}-calendar-service:${TAG}
    environment:
      RUNNING_IN_DOCKER: "true"
      ASPNETCORE_URLS: http://0.0.0.0:8080
      DB_SERVER: 10.128.3.20
      DB_USER: sa
      DB_PASSWORD: "Brittany040238."    
    networks: [backend]

    #--reminder service

  reminder-service:
    image: ${REGISTRY_PREFIX}-reminder-service:${TAG}
    environment:
      RUNNING_IN_DOCKER: "true"
      ASPNETCORE_URLS: http://0.0.0.0:8080
      DB_SERVER: 10.128.3.20
      DB_USER: sa
      DB_PASSWORD: "Brittany040238."    
   
    networks: [backend]
  # --- Customer Service ------------------------------------------------------
  customer-service:
    image: ${REGISTRY_PREFIX}-customer-service:${TAG}
    environment:
      RUNNING_IN_DOCKER: "true"
      ASPNETCORE_URLS: http://0.0.0.0:8080
      DB_SERVER: 10.128.3.20
      DB_USER: sa
      DB_PASSWORD: "Brittany040238."
      RabbitMQ__HostName: rabbitmq
      RabbitMQ__UserName: guest
      RabbitMQ__Password: guest
      HybridCache__Redis__ConnectionString: "redis:6379"
      HybridCache__Redis__KeyPrefix: "customer"
      HybridCache__Redis__Database: "5"
    depends_on:
      rabbitmq:
        condition: service_healthy
    
      redis:
        condition: service_healthy
    networks: [backend]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped

  # --- Email Service ---------------------------------------------------------
  email-service:
    image: ${REGISTRY_PREFIX}-email-service:${TAG}
    environment:
      RUNNING_IN_DOCKER: "true"
      ASPNETCORE_URLS: http://0.0.0.0:8080
      DB_SERVER: 10.128.3.20
      DB_USER: sa
      DB_PASSWORD: "Brittany040238."
      RabbitMQ__HostName: rabbitmq
      RabbitMQ__UserName: guest
      RabbitMQ__Password: guest
      HybridCache__Redis__ConnectionString: "redis:6379"
      HybridCache__Redis__KeyPrefix: "email"
      HybridCache__Redis__Database: "6"
    depends_on:
      rabbitmq:
        condition: service_healthy
     
      redis:
        condition: service_healthy
    networks: [backend]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped

  # --- Auth Service ----------------------------------------------------------
  signature-service:
    image: ${REGISTRY_PREFIX}-signature-service:${TAG}
    environment:
      RUNNING_IN_DOCKER: "true"
      ASPNETCORE_URLS: http://0.0.0.0:8080
      DB_SERVER: 10.128.3.20
      DB_USER: sa
      DB_PASSWORD: "Brittany040238."
      RabbitMQ__HostName: rabbitmq
      RabbitMQ__UserName: guest
      RabbitMQ__Password: guest
      HybridCache__Redis__ConnectionString: "redis:6379"
      HybridCache__Redis__KeyPrefix: "signature"
      HybridCache__Redis__Database: "9"
    depends_on: [rabbitmq]
    networks: [backend]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped

  # --- Migrators (Usan imágenes dedicadas) -----------------------------------
  auth-migrator:
    image: ${REGISTRY_PREFIX}-auth-migrator:${TAG}
  
    environment:
      DB_SERVER: 10.128.3.20
      DB_USER: sa
      DB_PASSWORD: "Brittany040238."
    networks: [backend]

  customer-migrator:
    image: ${REGISTRY_PREFIX}-customer-migrator:${TAG}
   
    environment:
      DB_SERVER: 10.128.3.20
      DB_USER: sa
      DB_PASSWORD: "Brittany040238."
    networks: [backend]

  calendar-migrator:
    image: ${REGISTRY_PREFIX}-calendar-migrator:${TAG}

    environment:
      DB_SERVER: 10.128.3.20
      DB_USER: sa
      DB_PASSWORD: "Brittany040238."
    networks: [backend]


  email-migrator:
    image: ${REGISTRY_PREFIX}-email-migrator:${TAG}
   
 
    environment:
      DB_SERVER: 10.128.3.20
      DB_USER: sa
      DB_PASSWORD: "Brittany040238."
    networks: [backend]

  signature-migrator:
    image: ${REGISTRY_PREFIX}-signature-migrator:${TAG}
 
    environment:
      DB_SERVER: 10.128.3.20
      DB_USER: sa
      DB_PASSWORD: "Brittany040238."
    networks: [backend]
      
  reminder-migrator:
    image: ${REGISTRY_PREFIX}-reminder-migrator:${TAG}
 
    environment:
      DB_SERVER: 10.128.3.20
      DB_USER: sa
      DB_PASSWORD: "Brittany040238."
    networks: [backend]

  sms-migrator:
    image: ${REGISTRY_PREFIX}-sms-migrator:${TAG} 
    environment:
      DB_SERVER: 10.128.3.20
      DB_USER: sa
      DB_PASSWORD: "Brittany040238."
    networks: [backend]


# ────────────────────  volúmenes  ─────────────────────────
volumes:
  redisdata:
  redisinsight_data:
  rabbitmq_data:


networks:
  backend:
    driver: bridge
