# =============================================================
#  CRMTaxPro Backend – Docker Compose Escalable (Sin NGINX)
# =============================================================

services:
  # --- RabbitMQ --------------------------------------------------------------
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - backend
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 30s
      timeout: 30s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  # --- Redis -----------------------------------------------------------------
  redis:
    image: redis:7-alpine
    container_name: redis
    command:
      [
        "redis-server",
        "--requirepass", "Brittany040238.",
        "--appendonly", "yes",
        "--appendfsync", "everysec",
        "--maxmemory", "2048mb",
        "--maxmemory-policy", "allkeys-lru",
        "--tcp-keepalive", "60",
        "--timeout", "300",
        "--save", "900", "1",
        "--save", "300", "10",
        "--save", "60", "10000",
        "--rdbcompression", "yes",
        "--rdbchecksum", "yes"
      ]
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data
    networks:
      - backend
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "Brittany040238.", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # --- RedisInsight ----------------------------------------------------------
  redisinsight:
    image: redislabs/redisinsight:1.14.0
    container_name: redisinsight
    ports:
      - "8081:8001"
    volumes:
      - redisinsight_data:/db
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - backend
    restart: unless-stopped

  # --- API Gateway con SSL Nativo -------------------------------------------
  apigateway:
    image: ${REGISTRY_PREFIX}-apigateway:${TAG}
    environment:
      RUNNING_IN_DOCKER: "true"
      ASPNETCORE_ENVIRONMENT: Production
      ASPNETCORE_URLS: http://0.0.0.0:80;https://0.0.0.0:443
      HybridCache__Redis__ConnectionString: "redis:6379,password=Brittany040238."
      HybridCache__Redis__KeyPrefix: "gateway"
      HybridCache__Redis__Database: "0"
      # Variables específicas para WebSocket
      WebSocket__AllowedOrigins: "https://go.taxprosuite.com,https://api.taxprosuite.com"
      WebSocket__KeepAliveInterval: "30"
      # Cloudflare settings
      CloudFlare__Enabled: "true"
      CloudFlare__Mode: "Full"
    ports:
      - "80:80"     # HTTP
      - "443:443"   # HTTPS (SSL nativo)
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks: [backend]
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost/health || curl -k -f https://localhost/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 768M
        reservations:
          memory: 384M

  # --- Auth Service ----------------------------------------------------------
  auth-service:
    image: ${REGISTRY_PREFIX}-auth-service:${TAG}
    environment:
      RUNNING_IN_DOCKER: "true"
      ASPNETCORE_URLS: http://0.0.0.0:8080
      DB_SERVER: 10.128.3.20
      DB_USER: sa
      DB_PASSWORD: "Brittany040238."
      RabbitMQ__HostName: rabbitmq
      RabbitMQ__UserName: guest
      RabbitMQ__Password: guest
      HybridCache__Redis__ConnectionString: "redis:6379,password=Brittany040238."
      HybridCache__Redis__KeyPrefix: "auth"
      HybridCache__Redis__Database: "1"
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 768M
        reservations:
          memory: 512M

  # --- CommLink Service con WebSocket optimizado ----------------------------
  commlink-service:
    image: ${REGISTRY_PREFIX}-commlink-service:${TAG}
    environment:
      RUNNING_IN_DOCKER: "true"
      ASPNETCORE_URLS: http://0.0.0.0:8080
      DB_SERVER: 10.128.3.20
      DB_USER: sa
      DB_PASSWORD: "Brittany040238."
      RabbitMQ__HostName: rabbitmq
      RabbitMQ__UserName: guest
      RabbitMQ__Password: guest
      HybridCache__Redis__ConnectionString: "redis:6379,password=Brittany040238."
      HybridCache__Redis__KeyPrefix: "commlink"
      HybridCache__Redis__Database: "4"
      # Configuraciones específicas para WebSocket
      WebSocket__MaxConnections: "1000"
      WebSocket__KeepAliveInterval: "30"
      WebSocket__BufferSize: "8192"
      WebSocket__EnableCompression: "true"
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
      auth-service:
        condition: service_healthy
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1024M
        reservations:
          memory: 512M

  # --- Customer Service ------------------------------------------------------
  customer-service:
    image: ${REGISTRY_PREFIX}-customer-service:${TAG}
    environment:
      RUNNING_IN_DOCKER: "true"
      ASPNETCORE_URLS: http://0.0.0.0:8080
      DB_SERVER: 10.128.3.20
      DB_USER: sa
      DB_PASSWORD: "Brittany040238."
      RabbitMQ__HostName: rabbitmq
      RabbitMQ__UserName: guest
      RabbitMQ__Password: guest
      HybridCache__Redis__ConnectionString: "redis:6379,password=Brittany040238."
      HybridCache__Redis__KeyPrefix: "customer"
      HybridCache__Redis__Database: "5"
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped

  # --- Email Service ---------------------------------------------------------
  email-service:
    image: ${REGISTRY_PREFIX}-email-service:${TAG}
    environment:
      RUNNING_IN_DOCKER: "true"
      ASPNETCORE_URLS: http://0.0.0.0:8080
      DB_SERVER: 10.128.3.20
      DB_USER: sa
      DB_PASSWORD: "Brittany040238."
      RabbitMQ__HostName: rabbitmq
      RabbitMQ__UserName: guest
      RabbitMQ__Password: guest
      HybridCache__Redis__ConnectionString: "redis:6379,password=Brittany040238."
      HybridCache__Redis__KeyPrefix: "email"
      HybridCache__Redis__Database: "6"
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped

  # --- Signature Service -----------------------------------------------------
  signature-service:
    image: ${REGISTRY_PREFIX}-signature-service:${TAG}
    environment:
      RUNNING_IN_DOCKER: "true"
      ASPNETCORE_URLS: http://0.0.0.0:8080
      DB_SERVER: 10.128.3.20
      DB_USER: sa
      DB_PASSWORD: "Brittany040238."
      RabbitMQ__HostName: rabbitmq
      RabbitMQ__UserName: guest
      RabbitMQ__Password: guest
      HybridCache__Redis__ConnectionString: "redis:6379,password=Brittany040238."
      HybridCache__Redis__KeyPrefix: "signature"
      HybridCache__Redis__Database: "9"
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped

  # --- Otros servicios (misma configuración que antes) ---------------------
  sms-service:
    image: ${REGISTRY_PREFIX}-sms-service:${TAG}
    environment:
      RUNNING_IN_DOCKER: "true"
      ASPNETCORE_URLS: http://0.0.0.0:8080
      DB_SERVER: 10.128.3.20
      DB_USER: sa
      DB_PASSWORD: "Brittany040238."
    networks:
      - backend

  calendar-service:
    image: ${REGISTRY_PREFIX}-calendar-service:${TAG}
    environment:
      RUNNING_IN_DOCKER: "true"
      ASPNETCORE_URLS: http://0.0.0.0:8080
      DB_SERVER: 10.128.3.20
      DB_USER: sa
      DB_PASSWORD: "Brittany040238."
    networks:
      - backend

  reminder-service:
    image: ${REGISTRY_PREFIX}-reminder-service:${TAG}
    environment:
      RUNNING_IN_DOCKER: "true"
      ASPNETCORE_URLS: http://0.0.0.0:8080
      DB_SERVER: 10.128.3.20
      DB_USER: sa
      DB_PASSWORD: "Brittany040238."
    networks:
      - backend

  subscription-service:
    image: ${REGISTRY_PREFIX}-subscription-service:${TAG}
    environment:
      RUNNING_IN_DOCKER: "true"
      ASPNETCORE_URLS: http://0.0.0.0:8080
      DB_SERVER: 10.128.3.20
      DB_USER: sa
      DB_PASSWORD: "Brittany040238."
    networks:
      - backend

  landing-service:
    image: ${REGISTRY_PREFIX}-landing-service:${TAG}
    environment:
      RUNNING_IN_DOCKER: "true"
      ASPNETCORE_URLS: http://0.0.0.0:8080
      DB_SERVER: 10.128.3.20
      DB_USER: sa
      DB_PASSWORD: "Brittany040238."
    networks:
      - backend

  # --- Migrators (ejecutan una vez y terminan) -----------------------------
  auth-migrator:
    image: ${REGISTRY_PREFIX}-auth-migrator:${TAG}
    environment:
      DB_SERVER: 10.128.3.20
      DB_USER: sa
      DB_PASSWORD: "Brittany040238."
    networks:
      - backend
    restart: "no"

  customer-migrator:
    image: ${REGISTRY_PREFIX}-customer-migrator:${TAG}
    environment:
      DB_SERVER: 10.128.3.20
      DB_USER: sa
      DB_PASSWORD: "Brittany040238."
    networks:
      - backend
    restart: "no"

  calendar-migrator:
    image: ${REGISTRY_PREFIX}-calendar-migrator:${TAG}
    environment:
      DB_SERVER: 10.128.3.20
      DB_USER: sa
      DB_PASSWORD: "Brittany040238."
    networks:
      - backend
    restart: "no"

  email-migrator:
    image: ${REGISTRY_PREFIX}-email-migrator:${TAG}
    environment:
      DB_SERVER: 10.128.3.20
      DB_USER: sa
      DB_PASSWORD: "Brittany040238."
    networks:
      - backend
    restart: "no"

  signature-migrator:
    image: ${REGISTRY_PREFIX}-signature-migrator:${TAG}
    environment:
      DB_SERVER: 10.128.3.20
      DB_USER: sa
      DB_PASSWORD: "Brittany040238."
    networks:
      - backend
    restart: "no"

  reminder-migrator:
    image: ${REGISTRY_PREFIX}-reminder-migrator:${TAG}
    environment:
      DB_SERVER: 10.128.3.20
      DB_USER: sa
      DB_PASSWORD: "Brittany040238."
    networks:
      - backend
    restart: "no"

  sms-migrator:
    image: ${REGISTRY_PREFIX}-sms-migrator:${TAG}
    environment:
      DB_SERVER: 10.128.3.20
      DB_USER: sa
      DB_PASSWORD: "Brittany040238."
    networks:
      - backend
    restart: "no"

  subscription-migrator:
    image: ${REGISTRY_PREFIX}-subscription-migrator:${TAG}
    environment:
      DB_SERVER: 10.128.3.20
      DB_USER: sa
      DB_PASSWORD: "Brittany040238."
    networks:
      - backend
    restart: "no"

  landing-migrator:
    image: ${REGISTRY_PREFIX}-landing-migrator:${TAG}
    environment:
      DB_SERVER: 10.128.3.20
      DB_USER: sa
      DB_PASSWORD: "Brittany040238."
    networks:
      - backend
    restart: "no"

  commlink-migrator:
    image: ${REGISTRY_PREFIX}-commlink-migrator:${TAG}
    environment:
      DB_SERVER: 10.128.3.20
      DB_USER: sa
      DB_PASSWORD: "Brittany040238."
    networks:
      - backend
    restart: "no"

# ────────────────────  Volúmenes  ─────────────────────────
volumes:
  redisdata:
  redisinsight_data:
  rabbitmq_data:

# ────────────────────  Redes  ─────────────────────────────
networks:
  backend:
    name: crmtaxpro_backend
    driver: bridge