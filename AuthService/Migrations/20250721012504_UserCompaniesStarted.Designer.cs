// <auto-generated />
using System;
using Infraestructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AuthService.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250721012504_UserCompaniesStarted")]
    partial class UserCompaniesStarted
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AuthService.Domains.Companies.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<DateTime?>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserLimit")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Companies", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("770e8400-e29b-41d4-a716-556655441000"),
                            Address = "Calle C, Brisa Oriental VIII",
                            Brand = "https://images5.example.com/",
                            CompanyName = "StackVsion Sofwatre S.R.L.",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Sofwatre Developers Assembly.",
                            FullName = "Vision Software",
                            Phone = "8298981594",
                            UserLimit = 25
                        });
                });

            modelBuilder.Entity("AuthService.Domains.CompanyUsers.CompanyUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("Confirm")
                        .HasColumnType("bit");

                    b.Property<string>("ConfirmToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<DateTime?>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("Factor2")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Otp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OtpExpires")
                        .HasColumnType("datetime2");

                    b.Property<bool>("OtpVerified")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ResetPasswordExpires")
                        .HasColumnType("datetime2");

                    b.Property<string>("ResetPasswordToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("CompanyUsers", (string)null);
                });

            modelBuilder.Entity("AuthService.Domains.CompanyUsers.CompanyUserProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CompanyUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<DateTime?>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompanyUserId")
                        .IsUnique();

                    b.ToTable("CompanyUserProfiles", (string)null);
                });

            modelBuilder.Entity("AuthService.Domains.CompanyUsers.CompanyUserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<DateTime?>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("CompanyUserId", "RoleId")
                        .IsUnique()
                        .HasDatabaseName("IX_CompanyUserRoles_CompanyUserId_RoleId");

                    b.ToTable("CompanyUserRoles", (string)null);
                });

            modelBuilder.Entity("AuthService.Domains.Permissions.Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<DateTime?>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("Permissions", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("550e8400-e29b-41d4-a716-446655440001"),
                            Code = "Permission.Create",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Create Permissions"
                        },
                        new
                        {
                            Id = new Guid("550e8400-e29b-41d4-a716-446655440002"),
                            Code = "Permission.Read",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Read Permissions"
                        },
                        new
                        {
                            Id = new Guid("550e8400-e29b-41d4-a716-446655440003"),
                            Code = "Permission.View",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "View Permissions"
                        },
                        new
                        {
                            Id = new Guid("550e8400-e29b-41d4-a716-446655440004"),
                            Code = "Permission.Delete",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Delete Permissions"
                        },
                        new
                        {
                            Id = new Guid("550e8400-e29b-41d4-a716-446655440005"),
                            Code = "Permission.Update",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Update Permissions"
                        },
                        new
                        {
                            Id = new Guid("550e8400-e29b-41d4-a716-446655440006"),
                            Code = "TaxUser.Create",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Create TaxUsers"
                        },
                        new
                        {
                            Id = new Guid("550e8400-e29b-41d4-a716-446655440007"),
                            Code = "TaxUser.Read",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Read TaxUsers"
                        },
                        new
                        {
                            Id = new Guid("550e8400-e29b-41d4-a716-446655440008"),
                            Code = "TaxUser.View",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "View TaxUsers"
                        },
                        new
                        {
                            Id = new Guid("550e8400-e29b-41d4-a716-446655440009"),
                            Code = "TaxUser.Delete",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Delete TaxUsers"
                        },
                        new
                        {
                            Id = new Guid("550e8400-e29b-41d4-a716-446655440010"),
                            Code = "TaxUser.Update",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Update TaxUsers"
                        },
                        new
                        {
                            Id = new Guid("550e8400-e29b-41d4-a716-446655440011"),
                            Code = "Customer.Create",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Create Customers"
                        },
                        new
                        {
                            Id = new Guid("550e8400-e29b-41d4-a716-446655440012"),
                            Code = "Customer.Read",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Read Customers"
                        },
                        new
                        {
                            Id = new Guid("550e8400-e29b-41d4-a716-446655440013"),
                            Code = "Customer.View",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "View Customers"
                        },
                        new
                        {
                            Id = new Guid("550e8400-e29b-41d4-a716-446655440014"),
                            Code = "Customer.Delete",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Delete Customers"
                        },
                        new
                        {
                            Id = new Guid("550e8400-e29b-41d4-a716-446655440015"),
                            Code = "Customer.Update",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Update Customers"
                        },
                        new
                        {
                            Id = new Guid("550e8400-e29b-41d4-a716-446655440016"),
                            Code = "Role.Create",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Create Roles"
                        },
                        new
                        {
                            Id = new Guid("550e8400-e29b-41d4-a716-446655440017"),
                            Code = "Role.Read",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Read Roles"
                        },
                        new
                        {
                            Id = new Guid("550e8400-e29b-41d4-a716-446655440018"),
                            Code = "Role.View",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "View Roles"
                        },
                        new
                        {
                            Id = new Guid("550e8400-e29b-41d4-a716-446655440019"),
                            Code = "Role.Delete",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Delete Roles"
                        },
                        new
                        {
                            Id = new Guid("550e8400-e29b-41d4-a716-446655440020"),
                            Code = "Role.Update",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Update Roles"
                        },
                        new
                        {
                            Id = new Guid("550e8400-e29b-41d4-a716-446655440021"),
                            Code = "RolePermission.Create",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Create RolePermissions"
                        },
                        new
                        {
                            Id = new Guid("550e8400-e29b-41d4-a716-446655440022"),
                            Code = "RolePermission.Read",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Read RolePermissions"
                        },
                        new
                        {
                            Id = new Guid("550e8400-e29b-41d4-a716-446655440023"),
                            Code = "RolePermission.View",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "View RolePermissions"
                        },
                        new
                        {
                            Id = new Guid("550e8400-e29b-41d4-a716-446655440024"),
                            Code = "RolePermission.Delete",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Delete RolePermissions"
                        },
                        new
                        {
                            Id = new Guid("550e8400-e29b-41d4-a716-446655440025"),
                            Code = "RolePermission.Update",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Update RolePermissions"
                        },
                        new
                        {
                            Id = new Guid("550e8400-e29b-41d4-a716-446655440026"),
                            Code = "Customer.SelfRead",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Read own profile"
                        },
                        new
                        {
                            Id = new Guid("550e8400-e29b-41d4-a716-446655440027"),
                            Code = "Customer.DisableLogin",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Disable customer login"
                        },
                        new
                        {
                            Id = new Guid("550e8400-e29b-41d4-a716-446655440028"),
                            Code = "Customer.EnableLogin",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Enable customer login"
                        },
                        new
                        {
                            Id = new Guid("550e8400-e29b-41d4-a716-446655440029"),
                            Code = "Sessions.Read",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Read sessions"
                        },
                        new
                        {
                            Id = new Guid("550e8400-e29b-41d4-a716-446655440030"),
                            Code = "Dependent.Create",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Create dependent"
                        },
                        new
                        {
                            Id = new Guid("550e8400-e29b-41d4-a716-446655440031"),
                            Code = "Dependent.Update",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Update dependent"
                        },
                        new
                        {
                            Id = new Guid("550e8400-e29b-41d4-a716-446655440032"),
                            Code = "Dependent.Delete",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Delete dependent"
                        },
                        new
                        {
                            Id = new Guid("550e8400-e29b-41d4-a716-446655440033"),
                            Code = "Dependent.Read",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Read dependent"
                        },
                        new
                        {
                            Id = new Guid("550e8400-e29b-41d4-a716-446655440034"),
                            Code = "Dependent.Viewer",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "View dependent"
                        },
                        new
                        {
                            Id = new Guid("550e8400-e29b-41d4-a716-446655440035"),
                            Code = "TaxInformation.Create",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Create tax info"
                        },
                        new
                        {
                            Id = new Guid("550e8400-e29b-41d4-a716-446655440036"),
                            Code = "TaxInformation.Update",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Update tax info"
                        },
                        new
                        {
                            Id = new Guid("550e8400-e29b-41d4-a716-446655440037"),
                            Code = "TaxInformation.Delete",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Delete tax info"
                        },
                        new
                        {
                            Id = new Guid("550e8400-e29b-41d4-a716-446655440038"),
                            Code = "TaxInformation.Read",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Read tax info"
                        },
                        new
                        {
                            Id = new Guid("550e8400-e29b-41d4-a716-446655440039"),
                            Code = "TaxInformation.Viewer",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "View tax info"
                        });
                });

            modelBuilder.Entity("AuthService.Domains.Roles.CustomerRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("CustomerId", "RoleId")
                        .IsUnique();

                    b.ToTable("CustomerRoles", (string)null);
                });

            modelBuilder.Entity("AuthService.Domains.Roles.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<DateTime?>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("PortalAccess")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Roles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("550e8400-e29b-41d4-a716-446655441001"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Has full access to all system features, settings, and user management. Responsible for maintaining and overseeing the platform.",
                            Name = "Administrator",
                            PortalAccess = 1
                        },
                        new
                        {
                            Id = new Guid("550e8400-e29b-41d4-a716-446655441002"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Has limited access to the system, can view and interact with allowed features based on their permissions. Typically focuses on using the core functionality",
                            Name = "User",
                            PortalAccess = 1
                        },
                        new
                        {
                            Id = new Guid("550e8400-e29b-41d4-a716-446655441003"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Has limited access to the system, can view and interact with allowed features based on their permissions. Typically focuses on using the core functionality",
                            Name = "TaxPreparer",
                            PortalAccess = 1
                        },
                        new
                        {
                            Id = new Guid("550e8400-e29b-41d4-a716-446655441004"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Has limited access to the system, can view and interact with allowed features based on their permissions. Typically focuses on using the core functionality",
                            Name = "Customer",
                            PortalAccess = 2
                        });
                });

            modelBuilder.Entity("AuthService.Domains.Roles.RolePermission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<DateTime?>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PermissionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PermissionId");

                    b.HasIndex("RoleId", "PermissionId")
                        .IsUnique();

                    b.ToTable("RolePermissions", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("770e8400-e29b-41d4-a716-556655450026"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PermissionId = new Guid("550e8400-e29b-41d4-a716-446655440026"),
                            RoleId = new Guid("550e8400-e29b-41d4-a716-446655441004")
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655450001"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PermissionId = new Guid("550e8400-e29b-41d4-a716-446655440001"),
                            RoleId = new Guid("550e8400-e29b-41d4-a716-446655441001")
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655450002"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PermissionId = new Guid("550e8400-e29b-41d4-a716-446655440002"),
                            RoleId = new Guid("550e8400-e29b-41d4-a716-446655441001")
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655450003"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PermissionId = new Guid("550e8400-e29b-41d4-a716-446655440003"),
                            RoleId = new Guid("550e8400-e29b-41d4-a716-446655441001")
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655450004"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PermissionId = new Guid("550e8400-e29b-41d4-a716-446655440004"),
                            RoleId = new Guid("550e8400-e29b-41d4-a716-446655441001")
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655450005"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PermissionId = new Guid("550e8400-e29b-41d4-a716-446655440005"),
                            RoleId = new Guid("550e8400-e29b-41d4-a716-446655441001")
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655450006"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PermissionId = new Guid("550e8400-e29b-41d4-a716-446655440006"),
                            RoleId = new Guid("550e8400-e29b-41d4-a716-446655441001")
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655450007"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PermissionId = new Guid("550e8400-e29b-41d4-a716-446655440007"),
                            RoleId = new Guid("550e8400-e29b-41d4-a716-446655441001")
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655450008"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PermissionId = new Guid("550e8400-e29b-41d4-a716-446655440008"),
                            RoleId = new Guid("550e8400-e29b-41d4-a716-446655441001")
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655450009"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PermissionId = new Guid("550e8400-e29b-41d4-a716-446655440009"),
                            RoleId = new Guid("550e8400-e29b-41d4-a716-446655441001")
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655450010"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PermissionId = new Guid("550e8400-e29b-41d4-a716-446655440010"),
                            RoleId = new Guid("550e8400-e29b-41d4-a716-446655441001")
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655450011"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PermissionId = new Guid("550e8400-e29b-41d4-a716-446655440011"),
                            RoleId = new Guid("550e8400-e29b-41d4-a716-446655441001")
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655450012"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PermissionId = new Guid("550e8400-e29b-41d4-a716-446655440012"),
                            RoleId = new Guid("550e8400-e29b-41d4-a716-446655441001")
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655450013"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PermissionId = new Guid("550e8400-e29b-41d4-a716-446655440013"),
                            RoleId = new Guid("550e8400-e29b-41d4-a716-446655441001")
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655450014"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PermissionId = new Guid("550e8400-e29b-41d4-a716-446655440014"),
                            RoleId = new Guid("550e8400-e29b-41d4-a716-446655441001")
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655450015"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PermissionId = new Guid("550e8400-e29b-41d4-a716-446655440015"),
                            RoleId = new Guid("550e8400-e29b-41d4-a716-446655441001")
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655450016"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PermissionId = new Guid("550e8400-e29b-41d4-a716-446655440016"),
                            RoleId = new Guid("550e8400-e29b-41d4-a716-446655441001")
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655450017"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PermissionId = new Guid("550e8400-e29b-41d4-a716-446655440017"),
                            RoleId = new Guid("550e8400-e29b-41d4-a716-446655441001")
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655450018"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PermissionId = new Guid("550e8400-e29b-41d4-a716-446655440018"),
                            RoleId = new Guid("550e8400-e29b-41d4-a716-446655441001")
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655450019"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PermissionId = new Guid("550e8400-e29b-41d4-a716-446655440019"),
                            RoleId = new Guid("550e8400-e29b-41d4-a716-446655441001")
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655450020"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PermissionId = new Guid("550e8400-e29b-41d4-a716-446655440020"),
                            RoleId = new Guid("550e8400-e29b-41d4-a716-446655441001")
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655450021"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PermissionId = new Guid("550e8400-e29b-41d4-a716-446655440021"),
                            RoleId = new Guid("550e8400-e29b-41d4-a716-446655441001")
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655450022"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PermissionId = new Guid("550e8400-e29b-41d4-a716-446655440022"),
                            RoleId = new Guid("550e8400-e29b-41d4-a716-446655441001")
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655450023"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PermissionId = new Guid("550e8400-e29b-41d4-a716-446655440023"),
                            RoleId = new Guid("550e8400-e29b-41d4-a716-446655441001")
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655450024"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PermissionId = new Guid("550e8400-e29b-41d4-a716-446655440024"),
                            RoleId = new Guid("550e8400-e29b-41d4-a716-446655441001")
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655450025"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PermissionId = new Guid("550e8400-e29b-41d4-a716-446655440025"),
                            RoleId = new Guid("550e8400-e29b-41d4-a716-446655441001")
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655450026"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PermissionId = new Guid("550e8400-e29b-41d4-a716-446655440026"),
                            RoleId = new Guid("550e8400-e29b-41d4-a716-446655441001")
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655450027"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PermissionId = new Guid("550e8400-e29b-41d4-a716-446655440027"),
                            RoleId = new Guid("550e8400-e29b-41d4-a716-446655441001")
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655450028"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PermissionId = new Guid("550e8400-e29b-41d4-a716-446655440028"),
                            RoleId = new Guid("550e8400-e29b-41d4-a716-446655441001")
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655450029"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PermissionId = new Guid("550e8400-e29b-41d4-a716-446655440029"),
                            RoleId = new Guid("550e8400-e29b-41d4-a716-446655441001")
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655450030"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PermissionId = new Guid("550e8400-e29b-41d4-a716-446655440030"),
                            RoleId = new Guid("550e8400-e29b-41d4-a716-446655441001")
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655450031"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PermissionId = new Guid("550e8400-e29b-41d4-a716-446655440031"),
                            RoleId = new Guid("550e8400-e29b-41d4-a716-446655441001")
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655450032"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PermissionId = new Guid("550e8400-e29b-41d4-a716-446655440032"),
                            RoleId = new Guid("550e8400-e29b-41d4-a716-446655441001")
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655450033"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PermissionId = new Guid("550e8400-e29b-41d4-a716-446655440033"),
                            RoleId = new Guid("550e8400-e29b-41d4-a716-446655441001")
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655450034"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PermissionId = new Guid("550e8400-e29b-41d4-a716-446655440034"),
                            RoleId = new Guid("550e8400-e29b-41d4-a716-446655441001")
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655450035"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PermissionId = new Guid("550e8400-e29b-41d4-a716-446655440035"),
                            RoleId = new Guid("550e8400-e29b-41d4-a716-446655441001")
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655450036"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PermissionId = new Guid("550e8400-e29b-41d4-a716-446655440036"),
                            RoleId = new Guid("550e8400-e29b-41d4-a716-446655441001")
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655450037"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PermissionId = new Guid("550e8400-e29b-41d4-a716-446655440037"),
                            RoleId = new Guid("550e8400-e29b-41d4-a716-446655441001")
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655450038"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PermissionId = new Guid("550e8400-e29b-41d4-a716-446655440038"),
                            RoleId = new Guid("550e8400-e29b-41d4-a716-446655441001")
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655450039"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PermissionId = new Guid("550e8400-e29b-41d4-a716-446655440039"),
                            RoleId = new Guid("550e8400-e29b-41d4-a716-446655441001")
                        },
                        new
                        {
                            Id = new Guid("770e8400-e29b-41d4-a716-556655460000"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PermissionId = new Guid("550e8400-e29b-41d4-a716-446655440011"),
                            RoleId = new Guid("550e8400-e29b-41d4-a716-446655441003")
                        },
                        new
                        {
                            Id = new Guid("770e8400-e29b-41d4-a716-556655460001"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PermissionId = new Guid("550e8400-e29b-41d4-a716-446655440012"),
                            RoleId = new Guid("550e8400-e29b-41d4-a716-446655441003")
                        },
                        new
                        {
                            Id = new Guid("770e8400-e29b-41d4-a716-556655460002"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PermissionId = new Guid("550e8400-e29b-41d4-a716-446655440013"),
                            RoleId = new Guid("550e8400-e29b-41d4-a716-446655441003")
                        },
                        new
                        {
                            Id = new Guid("770e8400-e29b-41d4-a716-556655460003"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PermissionId = new Guid("550e8400-e29b-41d4-a716-446655440015"),
                            RoleId = new Guid("550e8400-e29b-41d4-a716-446655441003")
                        },
                        new
                        {
                            Id = new Guid("770e8400-e29b-41d4-a716-556655460004"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PermissionId = new Guid("550e8400-e29b-41d4-a716-446655440027"),
                            RoleId = new Guid("550e8400-e29b-41d4-a716-446655441003")
                        },
                        new
                        {
                            Id = new Guid("770e8400-e29b-41d4-a716-556655460005"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PermissionId = new Guid("550e8400-e29b-41d4-a716-446655440028"),
                            RoleId = new Guid("550e8400-e29b-41d4-a716-446655441003")
                        },
                        new
                        {
                            Id = new Guid("770e8400-e29b-41d4-a716-556655460006"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PermissionId = new Guid("550e8400-e29b-41d4-a716-446655440001"),
                            RoleId = new Guid("550e8400-e29b-41d4-a716-446655441003")
                        },
                        new
                        {
                            Id = new Guid("770e8400-e29b-41d4-a716-556655460007"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PermissionId = new Guid("550e8400-e29b-41d4-a716-446655440004"),
                            RoleId = new Guid("550e8400-e29b-41d4-a716-446655441003")
                        },
                        new
                        {
                            Id = new Guid("770e8400-e29b-41d4-a716-556655460008"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PermissionId = new Guid("550e8400-e29b-41d4-a716-446655440030"),
                            RoleId = new Guid("550e8400-e29b-41d4-a716-446655441003")
                        },
                        new
                        {
                            Id = new Guid("770e8400-e29b-41d4-a716-556655460009"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PermissionId = new Guid("550e8400-e29b-41d4-a716-446655440031"),
                            RoleId = new Guid("550e8400-e29b-41d4-a716-446655441003")
                        },
                        new
                        {
                            Id = new Guid("770e8400-e29b-41d4-a716-556655460010"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PermissionId = new Guid("550e8400-e29b-41d4-a716-446655440032"),
                            RoleId = new Guid("550e8400-e29b-41d4-a716-446655441003")
                        },
                        new
                        {
                            Id = new Guid("770e8400-e29b-41d4-a716-556655460011"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PermissionId = new Guid("550e8400-e29b-41d4-a716-446655440033"),
                            RoleId = new Guid("550e8400-e29b-41d4-a716-446655441003")
                        },
                        new
                        {
                            Id = new Guid("770e8400-e29b-41d4-a716-556655460012"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PermissionId = new Guid("550e8400-e29b-41d4-a716-446655440034"),
                            RoleId = new Guid("550e8400-e29b-41d4-a716-446655441003")
                        },
                        new
                        {
                            Id = new Guid("770e8400-e29b-41d4-a716-556655460013"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PermissionId = new Guid("550e8400-e29b-41d4-a716-446655440035"),
                            RoleId = new Guid("550e8400-e29b-41d4-a716-446655441003")
                        },
                        new
                        {
                            Id = new Guid("770e8400-e29b-41d4-a716-556655460014"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PermissionId = new Guid("550e8400-e29b-41d4-a716-446655440036"),
                            RoleId = new Guid("550e8400-e29b-41d4-a716-446655441003")
                        },
                        new
                        {
                            Id = new Guid("770e8400-e29b-41d4-a716-556655460015"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PermissionId = new Guid("550e8400-e29b-41d4-a716-446655440037"),
                            RoleId = new Guid("550e8400-e29b-41d4-a716-446655441003")
                        },
                        new
                        {
                            Id = new Guid("770e8400-e29b-41d4-a716-556655460016"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PermissionId = new Guid("550e8400-e29b-41d4-a716-446655440038"),
                            RoleId = new Guid("550e8400-e29b-41d4-a716-446655441003")
                        },
                        new
                        {
                            Id = new Guid("770e8400-e29b-41d4-a716-556655460017"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PermissionId = new Guid("550e8400-e29b-41d4-a716-446655440039"),
                            RoleId = new Guid("550e8400-e29b-41d4-a716-446655441003")
                        },
                        new
                        {
                            Id = new Guid("880e8400-e29b-41d4-a716-556655470000"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PermissionId = new Guid("550e8400-e29b-41d4-a716-446655440026"),
                            RoleId = new Guid("550e8400-e29b-41d4-a716-446655441002")
                        },
                        new
                        {
                            Id = new Guid("880e8400-e29b-41d4-a716-556655470001"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PermissionId = new Guid("550e8400-e29b-41d4-a716-446655440029"),
                            RoleId = new Guid("550e8400-e29b-41d4-a716-446655441002")
                        },
                        new
                        {
                            Id = new Guid("880e8400-e29b-41d4-a716-556655470002"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PermissionId = new Guid("550e8400-e29b-41d4-a716-446655440003"),
                            RoleId = new Guid("550e8400-e29b-41d4-a716-446655441002")
                        },
                        new
                        {
                            Id = new Guid("880e8400-e29b-41d4-a716-556655470003"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PermissionId = new Guid("550e8400-e29b-41d4-a716-446655440018"),
                            RoleId = new Guid("550e8400-e29b-41d4-a716-446655441002")
                        },
                        new
                        {
                            Id = new Guid("880e8400-e29b-41d4-a716-556655470004"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PermissionId = new Guid("550e8400-e29b-41d4-a716-446655440008"),
                            RoleId = new Guid("550e8400-e29b-41d4-a716-446655441002")
                        },
                        new
                        {
                            Id = new Guid("880e8400-e29b-41d4-a716-556655470005"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PermissionId = new Guid("550e8400-e29b-41d4-a716-446655440013"),
                            RoleId = new Guid("550e8400-e29b-41d4-a716-446655441002")
                        },
                        new
                        {
                            Id = new Guid("880e8400-e29b-41d4-a716-556655470006"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PermissionId = new Guid("550e8400-e29b-41d4-a716-446655440034"),
                            RoleId = new Guid("550e8400-e29b-41d4-a716-446655441002")
                        },
                        new
                        {
                            Id = new Guid("880e8400-e29b-41d4-a716-556655470007"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PermissionId = new Guid("550e8400-e29b-41d4-a716-446655440039"),
                            RoleId = new Guid("550e8400-e29b-41d4-a716-446655441002")
                        });
                });

            modelBuilder.Entity("AuthService.Domains.Sessions.CompanyUserSession", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<DateTime?>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Device")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpireTokenRequest")
                        .HasColumnType("datetime2");

                    b.Property<string>("IpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsRevoke")
                        .HasColumnType("bit");

                    b.Property<string>("Latitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("TokenRefresh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TokenRequest")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompanyUserId");

                    b.ToTable("CompanyUserSessions", (string)null);
                });

            modelBuilder.Entity("AuthService.Domains.Sessions.CustomerSession", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Device")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpireTokenRequest")
                        .HasColumnType("datetime2");

                    b.Property<string>("IpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsRevoke")
                        .HasColumnType("bit");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("TokenRefresh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TokenRequest")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("CustomerSessions", (string)null);
                });

            modelBuilder.Entity("AuthService.Domains.Sessions.Session", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<DateTime?>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Device")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpireTokenRequest")
                        .HasColumnType("datetime2");

                    b.Property<string>("IpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsRevoke")
                        .HasColumnType("bit");

                    b.Property<string>("Latitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logintude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<Guid>("TaxUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TokenRefresh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TokenRequest")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TaxUserId");

                    b.ToTable("Sessions", (string)null);
                });

            modelBuilder.Entity("AuthService.Domains.Users.TaxUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("Confirm")
                        .HasColumnType("bit");

                    b.Property<string>("ConfirmToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<DateTime?>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Domain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Factor2")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Otp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OtpExpires")
                        .HasColumnType("datetime2");

                    b.Property<bool>("OtpVerified")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ResetPasswordExpires")
                        .HasColumnType("datetime2");

                    b.Property<string>("ResetPasswordToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("TaxUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("880e8400-e29b-41d4-a716-556655441000"),
                            CompanyId = new Guid("770e8400-e29b-41d4-a716-556655441000"),
                            Confirm = true,
                            Domain = "stackvision",
                            Email = "stackvisionsoftware@gmail.com",
                            IsActive = true,
                            OtpVerified = false,
                            Password = "zBLVJHyDUQKSp3ZYdgIeOEDnoeD61Zg566QoP2165AQAPHxzvJlAWjt1dV+Qinc7"
                        });
                });

            modelBuilder.Entity("AuthService.Domains.Users.TaxUserProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<DateTime?>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<Guid>("TaxUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TaxUserId")
                        .IsUnique();

                    b.ToTable("TaxUserProfiles", (string)null);
                });

            modelBuilder.Entity("AuthService.Domains.Users.UserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<DateTime?>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<Guid>("TaxUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("TaxUserId", "RoleId")
                        .IsUnique();

                    b.ToTable("UserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("880e8400-e29b-41d4-a716-556655442000"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleId = new Guid("550e8400-e29b-41d4-a716-446655441001"),
                            TaxUserId = new Guid("880e8400-e29b-41d4-a716-556655441000")
                        });
                });

            modelBuilder.Entity("AuthService.Domains.CompanyUsers.CompanyUser", b =>
                {
                    b.HasOne("AuthService.Domains.Companies.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("AuthService.Domains.CompanyUsers.CompanyUserProfile", b =>
                {
                    b.HasOne("AuthService.Domains.CompanyUsers.CompanyUser", "CompanyUser")
                        .WithOne("CompanyUserProfile")
                        .HasForeignKey("AuthService.Domains.CompanyUsers.CompanyUserProfile", "CompanyUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyUser");
                });

            modelBuilder.Entity("AuthService.Domains.CompanyUsers.CompanyUserRole", b =>
                {
                    b.HasOne("AuthService.Domains.CompanyUsers.CompanyUser", "CompanyUser")
                        .WithMany("CompanyUserRoles")
                        .HasForeignKey("CompanyUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AuthService.Domains.Roles.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyUser");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("AuthService.Domains.Roles.CustomerRole", b =>
                {
                    b.HasOne("AuthService.Domains.Roles.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("AuthService.Domains.Roles.RolePermission", b =>
                {
                    b.HasOne("AuthService.Domains.Permissions.Permission", "Permission")
                        .WithMany("RolePermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AuthService.Domains.Roles.Role", "Role")
                        .WithMany("RolePermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("AuthService.Domains.Sessions.CompanyUserSession", b =>
                {
                    b.HasOne("AuthService.Domains.CompanyUsers.CompanyUser", "CompanyUser")
                        .WithMany("CompanyUserSessions")
                        .HasForeignKey("CompanyUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyUser");
                });

            modelBuilder.Entity("AuthService.Domains.Sessions.Session", b =>
                {
                    b.HasOne("AuthService.Domains.Users.TaxUser", "TaxUser")
                        .WithMany("Sessions")
                        .HasForeignKey("TaxUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaxUser");
                });

            modelBuilder.Entity("AuthService.Domains.Users.TaxUser", b =>
                {
                    b.HasOne("AuthService.Domains.Companies.Company", "Company")
                        .WithMany("TaxUsers")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Company");
                });

            modelBuilder.Entity("AuthService.Domains.Users.TaxUserProfile", b =>
                {
                    b.HasOne("AuthService.Domains.Users.TaxUser", "TaxUser")
                        .WithOne("TaxUserProfile")
                        .HasForeignKey("AuthService.Domains.Users.TaxUserProfile", "TaxUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaxUser");
                });

            modelBuilder.Entity("AuthService.Domains.Users.UserRole", b =>
                {
                    b.HasOne("AuthService.Domains.Roles.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AuthService.Domains.Users.TaxUser", "TaxUser")
                        .WithMany("UserRoles")
                        .HasForeignKey("TaxUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("TaxUser");
                });

            modelBuilder.Entity("AuthService.Domains.Companies.Company", b =>
                {
                    b.Navigation("TaxUsers");
                });

            modelBuilder.Entity("AuthService.Domains.CompanyUsers.CompanyUser", b =>
                {
                    b.Navigation("CompanyUserProfile")
                        .IsRequired();

                    b.Navigation("CompanyUserRoles");

                    b.Navigation("CompanyUserSessions");
                });

            modelBuilder.Entity("AuthService.Domains.Permissions.Permission", b =>
                {
                    b.Navigation("RolePermissions");
                });

            modelBuilder.Entity("AuthService.Domains.Roles.Role", b =>
                {
                    b.Navigation("RolePermissions");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("AuthService.Domains.Users.TaxUser", b =>
                {
                    b.Navigation("Sessions");

                    b.Navigation("TaxUserProfile")
                        .IsRequired();

                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
